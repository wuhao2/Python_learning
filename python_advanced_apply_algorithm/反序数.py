# _*_ coding: utf-8 _*_
__author__ = 'bobby'
__data__ = '2017/6/9 15:16 '

"""
1.问题描述:
所谓反序数，即有这样成对的数，其特点是其中一个数的数字排列顺序完全颠倒过来，就变成另一个数，
如102和201，36和63等，简单的理解就是顺序相反的两个数，我们把这种成对的数互称为反序数。
反序数唯一不可能出现以0结尾的数。

一个3位数各位上的数字都不相同，它和它的反序数的乘积是280021，这个3位数应是多少？
"""
# a:(1-9), b:(0-9), c:(1-9)
# a != b != c
# a < c

def findNumber():
    for a in range(1,10):
        for b in range(10):
            if a == b: continue
            for c in range(1,10):
                if b == c: continue
                t1 = 100*a + 10*b + c
                t2 = 100*c + 10*b + a
                if t1<t2 and t1*t2 == 280021:
                    print(t1, t2)

findNumber()

#如果不加t1<t2则重复查找了
# 367 763
# 763 367