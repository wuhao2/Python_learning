# coding=utf-8
# coding= utf-8
# 猴子爬山：一只顽皮的猴子，从山底跳到山顶，总共有50级台阶，
# 猴子可以一次跳2，3，4级台阶；
# 求猴子上山有多少种不同的跳法？下山猴子一步可以跳1，2，3级台阶，
# 同样猴子有多少中不同的下山跳法？

# 解题思路：
# 跳到第n个台阶的数量 = 跳到第n-3个台阶的数量 + 跳到第n-2个台阶的数量 + 跳到第n-1个台阶的数量
# 到第n阶的跳法：f(n) = f(n-2) + f(n-3) + f(n-4)
# - - - - - - n - -
def fun(n, steps):
    """
    :param n: 50个台阶
    :param steps:爬山的步数，用一个元组表示（2，3，4）
    :return: 50级台阶，有多少种跳法 a[50]
    """
    a = [0] * (n + 1)  # 有n+1阶台阶
    a[0] = 1  # 赋初值为1
    for i in range(n + 1):  # 第0级台阶 到 第n级台阶
        for s in steps:  # 迭代所有的步数
            if (i - s) < 0:  # 不能从一个负数跳上台阶
                break
            a[i] += a[i - s]  # f(n) = f(n-2) + f(n-3) + f(n-4)

    return a[n]  # f(n)
print(fun(16, (1, 2, 3)))  # 上山72581632种
print(fun(50, (1, 2, 3)))  # 下山10562230626642种

# print(fun(10, (2,3,4)))  #17种
