# _*_ coding: utf-8 _*_
__author__ = 'wuhao'
__date__ = '2017/9/5 21:09'

"""
Plus One
将一个数字的每个位上的数字分别存到一个一维向量中，最高位在最开头，我们需要给这个数字加一，
即在末尾数字加一，如果末尾数字是9，那么则会有进位问题，而如果前面位上的数字仍为9，则需要继续向前进位。
具体算法如下：首先判断最后一位是否为9，若不是，直接加一返回，若是，则该位赋0，再继续查前一位，同样的方法，
知道查完第一位。如果第一位原本为9，
加一后会产生新的一位，那么最后要做的是，查运算完的第一位是否为0，如果是，则在最前头加一个1。


这个题就是实现大数（用数组存储）加1的功能。需要注意的就是满十进一这个规则，
以及类似999+1=1000需要在第一位添一个1这种特例。
"""


def plusOne(digit):
    flag = 1
    for i in range(len(digit) - 1, -1, -1):
        digit[i] = (digit[i] + 1) % 10
        if digit[i]:
            flag = 0
            break
    if flag:
        digit.insert(0, 1)  # 在index=0处插入一个1
    return digit


digit = [1, 3, 4, 1]
# digit = [1, 3, 4, 9]
# digit = [9, 9, 9, 9]
print(plusOne(digit))